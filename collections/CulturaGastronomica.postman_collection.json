{
	"info": {
		"_postman_id": "0dc3b01e-c2e9-409a-8b26-32517ae29b2f",
		"name": "CulturaGastronomica",
		"description": "_Equipo 10 - Breaking REST_\n\n_Andres Soler, Dario, David Fernando Guerrero Vanegas, Ines Rojas_\n\nLa cultura, la historia, el clima, entre otros, son factores que han influido en la forma como los pueblos en el mundo perciben, preparan y disfrutan la comida. Esta evolución ha llevado a que existan tipos de comida característicos de un país o una región.\n\nUn grupo de entusiastas de la comida quieren desarrollar una aplicación web que le permita a las personas interesadas, conocer y entender más sobre las distintas culturas gastronómicas en el mundo.\n\nToda está información sobre las cocinas del mundo será provista por un API REST. El concepto central es el de _cultura gastronómica_, la cual tiene un nombre que en algunos casos está definido por el país o por la región de origen de este tipo de cocina. Algunos nombres para las culturas gastronómicas pueden ser: la cultura gastronómica francesa, la cultura gastronómica mexicana o la cultura gastronómica mediterránea. Por cada cultura se debe tener la lista de países que la incluyen. En el caso de la cultura gastronómica francesa, el país evidentemente es Francia, pero en el caso de la cultura gastronómica mediterránea, los países van desde Portugal hasta Grecia, pasando por España y Marruecos.\n\nUn país puede tener más de una cultura gastronómica. La descripción de la cultura culinaria es muy importante porque solo el nombre sería muy ambiguo. Por ejemplo, en el caso de la cultura gastronómica italiana, la descripción puede ser este texto: “Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.” \\[1\\].\n\nPara entender mejor cada cultura gastronómica debe haber información específica sobre sus productos característicos. Por ejemplo, y tomando como referencia la cultura gastronómica Japonesa podemos mencionar al wasabi, la especia o condimento picante usado a menudo en sushi y otros platos con pescado. Cada producto tendrá un nombre, una descripción, una historia, y estará asociado con una categoría (que para el caso del wasabi será condimentos).\n\nDe cada cultura gastronómica debe existir un listado de las recetas más representativas. Una receta debe incluir un nombre, una descripción, una foto del plato, proceso de preparación básica, e incluir un video opcional de la preparación. Asumiremos que una receta solo pertenece a una cultura gastronómica.\n\nLa cultura gastronómica tendrá también un listado de restaurantes reconocidos especializados en ese tipo de comida. Cada restaurante tendrá un nombre, la ciudad y el país donde se encuentra, y el número de estrellas Michelin (si las tiene) junto con fecha de consecución. También se debe considerar que existen restaurantes que comparten más de una cultura gastronómica. El volumen de información que se manejará es importante: se espera que cada cultura gastronímica tenga miles de productos y recetas.\n\n\\[1\\]. Tomado y adaptado de https://comerbeber.com/cocina-italiana",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "620512",
		"_collection_link": "https://crimson-desert-426069.postman.co/workspace/Cultura-Gastronomica~2a5b63cc-57ac-4496-b951-320621cf1ef1/collection/620512-0dc3b01e-c2e9-409a-8b26-32517ae29b2f?action=share&source=collection_link&creator=620512"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "LECTURA login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"reader\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LECTURA SINGLE login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"reader_single\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "ESCRITURA login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"writer\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "ELIMINACION login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"deleter\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADMIN login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"admin\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Ciudad",
			"item": [
				{
					"name": "ADMIN login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"admin\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"city_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/city",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city"
							]
						}
					},
					"response": [
						{
							"name": "Crear ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Bogota\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n    \"name\": \"Bogota\"\n}"
						}
					]
				},
				{
					"name": "Obterner ciudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test for response status code",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Test for the structure and required fields in the response",
									"pm.test(\"Response has valid structure and required fields\", function () {",
									"    var responseData = pm.response.json();",
									"",
									"    // Check if each element in the response array has the required properties",
									"    responseData.forEach(function(city) {",
									"        pm.expect(city).to.have.property('id');",
									"        pm.expect(city).to.have.property('name');",
									"        pm.expect(city).to.have.property('country');",
									"    ",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city"
							]
						}
					},
					"response": [
						{
							"name": "Obterner ciudades",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Bogota\",\n        \"country\": {\n            \"name\": \"Colombia\"\n        },\n        \"restaurants\": [\n            {\n\t\t\t\t\t\t\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\t\t\t\t\t\t\"name\": \"KO\",\n\t\t\t\t\t\t\t\t\"michelinStars\": 2,\n\t\t\t\t\t\t\t\t\"achievementDate\": \"1900-01-01\"\n\t\t\t\t\t\t}\n        ],\n\t\t\t\t\"gastronomicCultures\": []\n    },\n    {\n        \"id\": \"1232asd-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Medellin\",\n        \"country\": {\n            \"name\": \"Colombia\"\n        },\n\t\t\t\t\"restaurants\": [\n            {\n\t\t\t\t\t\t\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\t\t\t\t\t\t\"name\": \"Restaurante 1\",\n\t\t\t\t\t\t\t\t\"michelinStars\": 2,\n\t\t\t\t\t\t\t\t\"achievementDate\": \"1900-01-01\"\n\t\t\t\t\t\t}\n        ],\n\t\t\t\t\"gastronomicCultures\": []\n    },\n    {\n        \"id\": \"12444asd-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Buenos aires\",\n        \"country\": {\n            \"name\": \"Argentina\"\n        },\n\t\t\t\t\"restaurants\": [\n            {\n\t\t\t\t\t\t\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\t\t\t\t\t\t\"name\": \"Restaurante 2\",\n\t\t\t\t\t\t\t\t\"michelinStars\": 2,\n\t\t\t\t\t\t\t\t\"achievementDate\": \"1900-01-01\"\n\t\t\t\t\t\t}\n        ],\n\t\t\t\t\"gastronomicCultures\": []\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, and country\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.have.property('id');",
									"  pm.expect(responseData).to.have.property('name');",
									"  pm.expect(responseData).to.have.property('country');",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Country is either null or a valid country name\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.country).to.satisfy(function (value) {",
									"        return value === null || /^[a-zA-Z\\s]+$/.test(value);",
									"    }, \"Country should be either null or a valid country name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{    \n\t\"id\": \"12444asd-1278-11ed-861d-0242ac120002\",\n\t\"name\": \"Buenos aires\",\n\t\"country\": {\n\t\t\t\"name\": \"Argentina\"\n\t}\n}"
						},
						{
							"name": "Obtener ciudad no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 123 no existe en la base de datos.\"\n}"
						}
					]
				},
				{
					"name": "Actualizar ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, and country\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('country');",
									"});",
									"",
									"",
									"pm.test(\"ID is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Country is either null or a valid country code\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.country).to.satisfy((country) => {",
									"    return country === null || /^[A-Z]{2}$/.test(country);",
									"  }, \"Country should either be null or a valid country code\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bogota modificado\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Bogota modificado\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n    \"name\": \"Bogota modificado\"\n}"
						},
						{
							"name": "Actualizar ciudad no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Colombia modificado\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 123 no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar ciudad",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Eliminar ciudad no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 123 no existe\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Pais",
			"item": [
				{
					"name": "Crear pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - name and id\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('id');",
									"});",
									"",
									"",
									"pm.test(\"Name is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg3MjY0NiwiZXhwIjoxNzI2ODc5ODQ2fQ.dYIQ1Mv5D1WH3GYT1OZO0T56QEF1HXBUpDku1fUrJGc",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Colombia\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/country",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country"
							]
						}
					},
					"response": [
						{
							"name": "Crear pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Colombia\"\n}"
						}
					]
				},
				{
					"name": "Obterner paises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, and cities\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(country) {",
									"        pm.expect(country).to.be.an('object');",
									"        pm.expect(country.id).to.exist;",
									"        pm.expect(country.name).to.exist;",
									"        pm.expect(country.cities).to.exist;",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/country",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country"
							]
						}
					},
					"response": [
						{
							"name": "Obterner paises",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"1234\",\n        \"name\": \"Colombia\",\n        \"cities\": [\n            {\n                \"id\": \"12343\",\n                \"name\": \"Bogota\"\n            }\n        ],\n        \"restaurants\": [\n            {\n                \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n                \"name\": \"KO\",\n                \"michelinStars\": 2,\n                \"achievementDate\": \"1900-01-01\"\n            }\n        ],\n        \"gastronomicCultures\": []\n    },\n    {\n        \"id\": \"1235\",\n        \"name\": \"Peru\",\n        \"cities\": [\n            {\n                \"id\": \"12343\",\n                \"name\": \"Lima\"\n            }\n        ],\n        \"restaurants\": [\n            {\n                \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n                \"name\": \"Restaurant 1\",\n                \"michelinStars\": 2,\n                \"achievementDate\": \"1900-01-01\"\n            }\n        ],\n        \"gastronomicCultures\": []\n    },\n    {\n        \"id\": \"1236\",\n        \"name\": \"Italia\",\n        \"cities\": [\n            {\n                \"id\": \"12343\",\n                \"name\": \"Roma\"\n            }\n        ],\n        \"restaurants\": [\n            {\n                \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n                \"name\": \"Restaurant 2\",\n                \"michelinStars\": 2,\n                \"achievementDate\": \"1900-01-01\"\n            }\n        ],\n        \"gastronomicCultures\": []\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to check the response status code",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"// Test to check for required fields in the response",
									"pm.test(\"Response body has required fields\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData).to.have.property('id');",
									"  pm.expect(jsonData).to.have.property('name');",
									"  pm.expect(jsonData).to.have.property('cities');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/country/{{country_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country",
								"{{country_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1234\",\n    \"name\": \"Colombia\",\n    \"cities\": [\n        {\n            \"id\": \"12343\",\n            \"name\": \"Bogota\"\n        }\n    ],\n    \"restaurants\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"KO\",\n            \"michelinStars\": 2,\n            \"achievementDate\": \"1900-01-01\"\n        }\n    ],\n    \"gastronomicCultures\": []\n}\n"
						},
						{
							"name": "Obtener pais no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 123 no existe en la base de datos.\"\n}"
						}
					]
				},
				{
					"name": "Actualizar pais",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Colombia modificado\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/country/{{country_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country",
								"{{country_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar pais",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Colombia modificado\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"1234\",\n    \"name\": \"Colombia modificado\"\n}"
						},
						{
							"name": "Actualizar pais no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Colombia modificado\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 123 no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar pais",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/country/{{country_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country",
								"{{country_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Eliminar pais no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 123 no existe\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "CulturaGastronomica",
			"item": [
				{
					"name": "login cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"culture\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear cultura gastronomica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - id, name, description, restaurants, countries, and products\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('description');",
									"});",
									"",
									"pm.test(\"Description is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cultura Gastronómica JaponesaAAA\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Permite la creación de una nueva cultura gastronómica en la base de datos, incluyendo su nombre, descripción y los países que la conforman."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/cultures",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n    \"restaurants\": [\n        \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n    ],\n    \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n    ],\n    \"products\": [\n        \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n        \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n    ],\n    \"recipes\": [\n        \"abcd1234-efgh-5678-ijkl-1234567890mn\"\n    ]\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Datos inválidos\",\n    \"message\": \"El campo 'nombre' es obligatorio.\"\n}"
						}
					]
				},
				{
					"name": "Obtener culturas gastronomicas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    ",
									"    responseData.forEach(culture => {",
									"        pm.expect(culture).to.have.property('id').that.is.a('string').and.is.not.empty;",
									"        pm.expect(culture).to.have.property('name').that.is.a('string').and.is.not.empty;",
									"        pm.expect(culture).to.have.property('description').that.is.a('string');",
									"        pm.expect(culture).to.have.property('restaurants').that.is.an('array');",
									"        //pm.expect(culture).to.have.property('countries').that.is.an('array');",
									"        //pm.expect(culture).to.have.property('products').that.is.an('array');",
									"       // pm.expect(culture).to.have.property('recipes').that.is.an('array');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Recupera información detallada sobre una cultura gastronómica específica, como su historia, platos representativos, y la lista de países asociados."
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n        \"name\": \"Mediterranean Culture\",\n        \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n        \"restaurants\": [\n            {\n                \"id\": \"a1c2d3f4-5678-90ab-cdef-1234567890ab\",\n                \"name\": \"El Olivo\"\n            }\n        ],\n        \"countries\": [\n            {\n                \"id\": \"de9c8a70-4567-1234-bcde-9876543210ef\",\n                \"name\": \"Spain\"\n            },\n            {\n                \"id\": \"123f4e5d-6789-abcd-ef01-234567890ghi\",\n                \"name\": \"Italy\"\n            }\n        ],\n        \"products\": [\n            {\n                \"id\": \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n                \"name\": \"Olive Oil\",\n                \"category\": \"cooking oils\"\n            },\n            {\n                \"id\": \"5678ijkl-1234-mnop-qrst-1234567890uv\",\n                \"name\": \"Feta Cheese\",\n                \"category\": \"cheeses\"\n            }\n        ],\n        \"recipes\": [\n            {\n                \"id\": \"abcd1234-efgh-5678-ijkl-1234567890mn\",\n                \"name\": \"Greek Salad\",\n                \"photo\": \"https://example.com/greek-salad.jpg\"\n            }\n        ]\n    },\n    {\n        \"id\": \"c8e9f541-24f8-22fe-af67-0343bc230003\",\n        \"name\": \"Asian Cuisine\",\n        \"description\": \"Asian cuisine is known for its diversity and bold flavors, utilizing ingredients like soy sauce, ginger, garlic, and a variety of fresh vegetables.\",\n        \"restaurants\": [\n            {\n                \"id\": \"b2d3f4g5-6789-01ab-cdef-234567890abc\",\n                \"name\": \"Sakura\"\n            }\n        ],\n        \"countries\": [\n            {\n                \"id\": \"ef9d7b80-5678-2345-bcde-0987654321fg\",\n                \"name\": \"Japan\"\n            },\n            {\n                \"id\": \"234f5g6h-7890-bcde-ef01-345678901ijk\",\n                \"name\": \"China\"\n            }\n        ],\n        \"products\": [\n            {\n                \"id\": \"2345bcde-6789-fghi-jklm-234567890nop\",\n                \"name\": \"Soy Sauce\",\n                \"category\": \"condiments\"\n            },\n            {\n                \"id\": \"6789klmn-2345-opqr-stuv-567890123wxy\",\n                \"name\": \"Tofu\",\n                \"category\": \"protein\"\n            }\n        ],\n        \"recipes\": [\n            {\n                \"id\": \"bcde2345-fghi-6789-jklm-234567890nop\",\n                \"name\": \"Sushi\",\n                \"photo\": \"https://example.com/sushi.jpg\"\n            }\n        ]\n    }\n]"
						},
						{
							"name": "200 Ok Empty",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Obtener cultura gastronomica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, description, and restaurants\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.exist;",
									"    pm.expect(responseData.name).to.exist;",
									"    pm.expect(responseData.description).to.exist;",
									"    pm.expect(responseData.restaurants).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Este endpoint devuelve la información de una cultura gastronómica específica usando el id."
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Mediterranean Culture\",\n    \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n    \"restaurants\": [\n        {\n            \"id\": \"a1c2d3f4-5678-90ab-cdef-1234567890ab\",\n            \"name\": \"El Olivo\",\n            \"stars\": [\n                {\n                    \"id\": \"12ab34cd-5678-90ef-ghij-1234567890kl\",\n                    \"name\": \"Michelin Star\",\n                    \"date\": \"2022-05-10\"\n                }\n            ]\n        }\n    ],\n    \"countries\": [\n        {\n            \"id\": \"de9c8a70-4567-1234-bcde-9876543210ef\",\n            \"name\": \"Spain\"\n        },\n        {\n            \"id\": \"123f4e5d-6789-abcd-ef01-234567890ghi\",\n            \"name\": \"Italy\"\n        }\n    ],\n    \"products\": [\n        {\n            \"id\": \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n            \"name\": \"Olive Oil\",\n            \"history\": \"Olive oil has been a staple in Mediterranean diets for thousands of years.\",\n            \"description\": \"A key ingredient in Mediterranean cuisine, used in salads, cooking, and as a dressing.\",\n            \"category\": \"cooking oils\"\n        },\n        {\n            \"id\": \"5678ijkl-1234-mnop-qrst-1234567890uv\",\n            \"name\": \"Feta Cheese\",\n            \"history\": \"Feta cheese has been produced in Greece for centuries, often from sheep's milk.\",\n            \"description\": \"A crumbly and tangy cheese commonly used in Greek salads.\",\n            \"category\": \"cheeses\"\n        }\n    ],\n    \"recipes\": [\n        {\n            \"id\": \"abcd1234-efgh-5678-ijkl-1234567890mn\",\n            \"name\": \"Greek Salad\",\n            \"description\": \"A traditional salad made with tomatoes, cucumbers, onions, olives, and feta cheese, dressed with olive oil.\",\n            \"photo\": \"https://example.com/greek-salad.jpg\",\n            \"preparation\": \"Chop the vegetables, mix them in a bowl, add olives and feta cheese, and drizzle with olive oil.\",\n            \"video\": \"https://example.com/greek-salad-preparation.mp4\"\n        }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"gastronomicCultures\": []\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/1234567",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"1234567"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Cultura Gastronómica no encontrada\",\n    \"message\": \"La cultura gastronómica con id 123 no existe en la base de datos.\"\n}"
						}
					]
				},
				{
					"name": "Actualizar cultura gastronomica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response content type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"// Test to check the response body structure and properties",
									"pm.test(\"Response body has valid structure and properties\", function () {",
									"    var response = pm.response.json();",
									"    pm.expect(response).to.have.property('id');",
									"    pm.expect(response).to.have.property('name');",
									"    pm.expect(response).to.have.property('description');",
									"    pm.expect(response).to.have.property('restaurants');",
									"    pm.expect(response).to.have.property('countries');",
									"    pm.expect(response).to.have.property('products');",
									"    pm.expect(response).to.have.property('recipes');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Mediterranean Culture\",\n   \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n   \"restaurants\": [\n      \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n   ],\n   \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n   ],\n   \"products\": [\n         \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n         \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n   ],\n   \"recipes\": [\n         \"abcd1234-efgh-5678-ijkl-1234567890mn\"         \n   ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Este endpoint permite la actualización de los detalles de una cultura gastronómica existente."
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Mediterranean Culture\",\n   \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n   \"restaurants\": [\n      \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n   ],\n   \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n   ],\n   \"products\": [\n         \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n         \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n   ],\n   \"recipes\": [\n         \"abcd1234-efgh-5678-ijkl-1234567890mn\"         \n   ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/1f2b3c4d-5678-90ab-cdef-1234567890ab",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"1f2b3c4d-5678-90ab-cdef-1234567890ab"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Mediterranean Culture\",\n    \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n    \"restaurants\": [\n        {\n            \"id\": \"a1c2d3f4-5678-90ab-cdef-1234567890ab\",\n            \"name\": \"El Olivo\"\n        }\n    ],\n    \"countries\": [\n        {\n            \"id\": \"de9c8a70-4567-1234-bcde-9876543210ef\",\n            \"name\": \"Spain\"\n        },\n        {\n            \"id\": \"123f4e5d-6789-abcd-ef01-234567890ghi\",\n            \"name\": \"Italy\"\n        }\n    ],\n    \"products\": [\n        {\n            \"id\": \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n            \"name\": \"Olive Oil\",\n            \"category\": \"cooking oils\"\n        },\n        {\n            \"id\": \"5678ijkl-1234-mnop-qrst-1234567890uv\",\n            \"name\": \"Feta Cheese\",\n            \"category\": \"cheeses\"\n        }\n    ],\n    \"recipes\": [\n        {\n            \"id\": \"abcd1234-efgh-5678-ijkl-1234567890mn\",\n            \"name\": \"Greek Salad\",\n            \"photo\": \"https://example.com/greek-salad.jpg\"\n        }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"Mediterranean Culture\",\n   \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\",\n   \"restaurants\": [\n      \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n   ],\n   \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n   ],\n   \"products\": [\n         \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n         \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n   ],\n   \"recipes\": [\n         \"abcd1234-efgh-5678-ijkl-1234567890mn\"         \n   ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Cultura Gastronómica no encontrada\",\n    \"message\": \"La cultura gastronómica con id 123 no existe.\"\n}"
						}
					]
				},
				{
					"name": "Eliminar cultura gastronomica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Response status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Este endpoint permite la eliminación de una cultura gastronómica de la base de datos."
					},
					"response": [
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/1f2b3c4d-5678-90ab-cdef-1234567890ab",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"1f2b3c4d-5678-90ab-cdef-1234567890ab"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Cultura Gastronómica no encontrada\",\n    \"message\": \"La cultura gastronómica con id 123 no existe.\"\n}"
						}
					]
				}
			],
			"description": "Esta carpeta contiene los endpoints relacionados con la gestión de diferentes culturas gastronómicas representadas en la aplicación. Las culturas gastronómicas abarcan las tradiciones culinarias, prácticas, y sabores característicos de una región o país, y son esenciales para proporcionar una experiencia culinaria rica y auténtica.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Restaurante",
			"item": [
				{
					"name": "ADMIN login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"admin\",\r\n   \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"restaurant_id\", data.id);\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.name).to.exist;\r",
									"  pm.expect(responseData.michelinStars).to.exist;\r",
									"  pm.expect(responseData.achievementDate).to.exist;\r",
									"  pm.expect(responseData.id).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Name is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"KO2\",\n\t\"michelinStars\": 2,\n    \"achievementDate\": \"2023-09-28T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite registrar un nuevo restaurante en la base de datos, especificando detalles como nombre, dirección, tipo de cocina, y cultura gastronómica asociada."
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"KO\",\n\t\"michelinStars\": 2,\n\t\"achievementDate\": \"1900-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"KO\",\n    \"michelinStars\": 2,\n    \"achievementDate\": \"1900-01-01\"\n}"
						}
					]
				},
				{
					"name": "Obterner restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.to.have.status(200));",
									"});",
									"",
									"// Test for required fields in the response",
									"pm.test(\"Response contains required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    responseData.forEach((restaurant) => {",
									"        pm.expect(restaurant).to.have.property('id');",
									"        pm.expect(restaurant).to.have.property('name');",
									"        pm.expect(restaurant).to.have.property('michelinStars');",
									"        pm.expect(restaurant).to.have.property('achievementDate');",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Recupera la información detallada de un restaurante específico, incluyendo su menú, horario de apertura, y cualquier otra información relevante."
					},
					"response": [
						{
							"name": "Obterner restaurantes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n        \"name\": \"KO\",\n        \"michelinStars\": 2,\n        \"achievementDate\": \"1900-01-01\",\n        \"city\": {\n            \"name\": \"Bogota\"\n        },\n        \"country\": {\n            \"name\": \"Colombia\"\n        },\n        \"gastronomicCultures\": []\n    },\n    {\n        \"id\": \"11122ac-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Parmesano\",\n        \"michelinStars\": 3,\n        \"achievementDate\": \"2001-01-01\",\n        \"city\": {\n            \"name\": \"Medellin\"\n        },\n        \"country\": {\n            \"name\": \"Colombia\"\n        },\n        \"gastronomicCultures\": []\n    },\n    {\n         \"id\": \"12323ad-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Restaurante\",\n        \"michelinStars\": 4,\n        \"achievementDate\": \"2011-01-01\",\n        \"city\": {\n            \"name\": \"Cusco\"\n        },\n        \"country\": {\n            \"name\": \"Peru\"\n        },\n        \"gastronomicCultures\": []\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"// Test to check for required fields in the response",
									"pm.test(\"Response contains required fields\", function () {",
									"    var responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('michelinStars');",
									"    pm.expect(responseData).to.have.property('achievementDate');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Recupera la información detallada de un restaurante específico, incluyendo su menú, horario de apertura, y cualquier otra información relevante."
					},
					"response": [
						{
							"name": "Obtener restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n    \"name\": \"KO\",\n    \"michelinStars\": 2,\n    \"achievementDate\": \"1900-01-01\",\n    \"city\": {\n        \"name\": \"Bogota\"\n    },\n    \"country\": {\n        \"name\": \"Colombia\"\n    }\n}"
						},
						{
							"name": "Obtener restaurante no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"El restaurante con id 123 no existe en la base de datos.\"\n}"
						}
					]
				},
				{
					"name": "Actualizar restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"// Test to check for required fields in the response",
									"pm.test(\"Required fields are present in the response\", function () {",
									"    var responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('michelinStars');",
									"    pm.expect(responseData).to.have.property('achievementDate');",
									"});",
									"// Test to check the status code is 200",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"KO modificado\",\n\t\"michelinStars\": 2,\n\t\"achievementDate\": \"1900-01-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Facilita la modificación de los datos de un restaurante existente, como su nombre, ubicación o especialidades."
					},
					"response": [
						{
							"name": "Actualizar restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nombre\": \"KO modificado\",\n\t\"michelinStars\": 2,\n\t\"achievmentDate\": \"1900-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"KO modificado\",\n    \"michelinStars\": 2,\n    \"achievementDate\": \"1900-01-01\"\n}"
						},
						{
							"name": "Actualizar restaurante no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"nombre\": \"KO modificado\",\n\t\"michelinStars\": 2,\n\t\"achievementDate\": \"1900-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"El restaurante con id 123 no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to validate the response code",
									"pm.test(\"Response status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Proporciona la funcionalidad para eliminar un restaurante del sistema."
					},
					"response": [
						{
							"name": "Eliminar restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Eliminar restaurante no existente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"El restaurante con id 123 no existe\"\n}"
						}
					]
				}
			],
			"description": "Esta carpeta contiene los endpoints relacionados con la gestión de restaurantes que forman parte de la cultura gastronómica representada en la aplicación. Los restaurantes pueden estar asociados a una o más culturas gastronómicas, y cada uno cuenta con información relevante como su nombre, ubicación, especialidades, y más."
		},
		{
			"name": "Producto",
			"item": [
				{
					"name": "Crear producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"product_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields - id, name, description, history and categoryProduct\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('name');\r",
									"    pm.expect(responseData).to.have.property('description');\r",
									"\tpm.expect(responseData).to.have.property('history');\r",
									"});\r",
									"\r",
									"pm.test(\"Description is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg4NDg1NSwiZXhwIjoxNzI2ODkyMDU1fQ.LjOMtn_bXD7yWw1AHLn3XB8dKP_3t9ZSNY_Ce56OQKo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\r\n  \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/product",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product"
							]
						},
						"description": "Este endpoint permite agregar un nuevo producto a la colección de productos asociados a una cultura gastronómica. El producto debe incluir un nombre, descripción, historia, y la categoría a la cual pertenece."
					},
					"response": [
						{
							"name": "Crear producto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"Especia o condimento picante usado a menudo en sushi.\",\r\n  \"history\": \"El wasabi ha sido parte esencial de la cocina japonesa durante siglos.\",\r\n  \"categoryProduct\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/product",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Wasabi\"\n}"
						}
					]
				},
				{
					"name": "Obtener productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of products > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg5MjIwNCwiZXhwIjoxNzI2ODk5NDA0fQ.RxHbgUZTD3H8qOk_xYYO--A8qrdloOib5EhSI8-jpqw",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/product",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product"
							]
						},
						"description": "Este endpoint permite obtener una lista de todos los productos en la base de datos, junto con sus detalles completos y las asociaciones a las culturas gastronómicas relacionadas."
					},
					"response": [
						{
							"name": "Obtener productos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/product",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"name\": \"Wasabi\",\n        \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\n        \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\n        \"categoryProduct\": {\n            \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n            \"name\": \"Condimentos\"\n        },\n        \"dateCreation\": \"2024-08-17T14:35:45Z\",\n        \"gastronomicCulture\": []\n    },\n    {\n        \"id\": \"8bbf021a-9016-46d7-8a23-767cbdcf9765\",\n        \"name\": \"Pizza Margherita\",\n        \"description\": \"Pizza tradicional italiana, famosa por su simpleza y sabor con tomate, mozzarella, y albahaca.\",\n        \"history\": \"Creada en Nápoles, Italia, la pizza Margherita es un ícono de la cocina italiana, representando los colores de la bandera italiana.\",\n        \"categoriaProducto\": {\n            \"id\": 11,\n            \"name\": \"Platos Principales\"\n        },\n        \"dateCreation\": \"2024-08-17T15:00:12Z\",\n        \"gastronomicCulture\": []\n    },\n    {\n    \"id\": \"987e6543-e21b-43d2-a457-624e151174000\",\n    \"name\": \"Salsa de soja\",\n    \"description\": \"Condimento fermentado utilizado en la cocina asiática.\",\n    \"history\": \"Originaria de China, la salsa de soja se ha expandido globalmente.\",\n    \"categoriaProducto\": {\n      \"id\": \"8794e9b3-cf95-4f7f-7fd5-c3c11bc7c15a\",\n      \"name\": \"Salsas\"\n    },\n    \"dateCreation\": \"2024-08-02T10:00:00Z\",\n    \"gastronomicCulture\": []\n  }\n]"
						}
					]
				},
				{
					"name": "Obtener producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test obtener un museo",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint permite obtener los detalles completos de un solo producto basado en su identificador único (`id`). La respuesta incluye todos los atributos básicos del producto y sus asociaciones con las culturas gastronómicas relacionadas."
					},
					"response": [
						{
							"name": "Obtener producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\r\n  \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\r\n  \"categoryProduct\": {\r\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\r\n    \"name\": \"Condimentos\"\r\n  },\r\n  \"dateCreation\": \"2024-08-17T14:35:45Z\",\r\n  \"gastronomicCulture\": []\r\n}"
						},
						{
							"name": "Obtener producto inexistente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Producto no encontrado.\",\n    \"message\": \"El producto con id {{product_id}} no existe en la base de datos.\",\n    \"statusCode\": 404\n}"
						}
					]
				},
				{
					"name": "Actualizar producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test actualizar un producto\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Wasabi Modificado otra vez\",\r\n  \"description\": \"El wasabi es una especia picante comúnmente usada en sushi y otros platos de pescado, ahora con un sabor más suave.\",\r\n  \"history\": \"El wasabi modificado ha sido redescubierto en Japón, manteniendo su importancia cultural mientras se ajusta a los paladares modernos.\",\r\n  \"categoryProduct\": {\r\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\r\n    \"name\": \"Condimentos\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint permite actualizar los detalles de un producto existente en la base de datos utilizando su identificador único (`id`). Los datos del producto que se desean modificar deben ser enviados en el cuerpo de la solicitud en formato JSON. La respuesta incluirá la representación actualizada del recurso."
					},
					"response": [
						{
							"name": "Actualizar producto",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Wasabi Modificado\",\r\n  \"description\": \"El wasabi es una especia picante comúnmente usada en sushi y otros platos de pescado, ahora con un sabor más suave.\",\r\n  \"history\": \"El wasabi modificado ha sido redescubierto en Japón, manteniendo su importancia cultural mientras se ajusta a los paladares modernos.\",\r\n  \"categoryProduct\": {\r\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\r\n    \"name\": \"Condimentos\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"Wasabi Modificado\",\n  \"description\": \"El wasabi es una especia picante comúnmente usada en sushi y otros platos de pescado, ahora con un sabor más suave.\",\n  \"history\": \"El wasabi modificado ha sido redescubierto en Japón, manteniendo su importancia cultural mientras se ajusta a los paladares modernos.\",\n  \"categoryProduct\": {\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n    \"name\": \"Condimentos\"\n  },\n  \"dateCreation\": \"2024-08-17T14:35:45Z\",\n  \"gastronomicCulture\": []\n}"
						},
						{
							"name": "Actualizar producto inexistente",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Producto Inexistente\",\r\n  \"description\": \"Este es un intento de actualizar un producto que no existe en la base de datos.\",\r\n  \"history\": \"No debería haber una historia, ya que este producto no existe.\",\r\n  \"categoryProduct\": {\r\n    \"id\": \"8c640f6d-156c-4df7-93c3-1e4dcd66bb37\",\r\n    \"name\": \"Categoría Ficticia\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Producto no encontrado.\",\r\n  \"message\": \"El producto con id {{product_id}} no existe en la base de datos.\",\r\n  \"statusCode\": 404\r\n}"
						}
					]
				},
				{
					"name": "Borrar producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test borrar un producto\r",
									"pm.test(\"Producto eliminado exitosamente\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint permite borrar un producto específico de la colección de productos en la base de datos. Cuando la operación se completa con éxito, el servidor debe retornar un código `204 No Content`, lo que indica que la solicitud se ha procesado correctamente y no hay contenido adicional que mostrar."
					},
					"response": [
						{
							"name": "Borrar producto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Borrar producto inexistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Producto no encontrado.\",\r\n  \"message\": \"El producto con id {{product_id}} no existe en la base de datos.\",\r\n  \"statusCode\": 404\r\n}"
						}
					]
				}
			],
			"description": "Esta carpeta agrupa los endpoints destinados a la gestión de productos gastronómicos, que son elementos clave en las culturas culinarias representadas en la aplicación. Los productos pueden ser ingredientes, platillos tradicionales o cualquier otro bien relacionado con la gastronomía que forme parte de una cultura específica.\n\n#### **Funcionalidades Incluidas:**\n\n- **Crear un Producto:** Permite agregar un nuevo producto gastronómico a la base de datos, especificando detalles como nombre, descripción, tipo de producto, y la cultura gastronómica a la que pertenece.\n- **Obtener Detalles de un Producto:** Recupera la información específica de un producto, incluyendo su origen, usos en la cocina, y cualquier otra información relevante.\n- **Actualizar Información del Producto:** Facilita la actualización de los detalles de un producto existente, como su nombre, descripción o clasificación.\n- **Eliminar un Producto:** Proporciona la funcionalidad para eliminar un producto del sistema."
		},
		{
			"name": "Categoria",
			"item": [
				{
					"name": "Crear categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"category_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Condimentos\",\r\n  \"description\": \"Descripción de la categoria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Crear categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"condimentos\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/categories",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"condimentos\"\n}"
						}
					]
				},
				{
					"name": "Obtener categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of categories > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Obtener categorias",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"name\": \"condimentos\"\n    },\n    {\n        \"id\": \"8bbf021a-9016-46d7-8a23-767cbdcf9765\",\n        \"name\": \"salsas\"\n    },\n    {\n        \"id\": \"987e6543-e21b-43d2-a457-624e151174000\",\n        \"name\": \"harinas\"\n  }\n]"
						}
					]
				},
				{
					"name": "Obtener categoria por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"category_id\", data.id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response includes all basic attributes of the product and its associations with related culinary cultures\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.include.all.keys('id', 'name');",
									"});",
									"",
									"",
									"pm.test(\"Ensure that the unique identifier ('id') is present and in the correct format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id').to.match(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						},
						"description": "Este endpoint permite obtener los detalles completos de un solo producto basado en su identificador único (`id`). La respuesta incluye todos los atributos básicos del producto y sus asociaciones con las culturas gastronómicas relacionadas."
					},
					"response": [
						{
							"name": "Obtener categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"name\": \"condimentos\"\r\n}"
						},
						{
							"name": "Obtener categoria inexistente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Categoria no encontrado.\",\n    \"message\": \"La categoria con id {{category_id}} no existe en la base de datos.\",\n    \"statusCode\": 404\n}"
						}
					]
				},
				{
					"name": "Actualizar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Salsas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						},
						"description": "Este endpoint permite actualizar los detalles de un producto existente en la base de datos utilizando su identificador único (`id`). Los datos del producto que se desean modificar deben ser enviados en el cuerpo de la solicitud en formato JSON. La respuesta incluirá la representación actualizada del recurso."
					},
					"response": [
						{
							"name": "Actualizar producto",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"categoria1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/categories/1f2b3c4d-5678-90ab-cdef-1234567890ab",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"categories",
										"1f2b3c4d-5678-90ab-cdef-1234567890ab"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"categoria1\"\n}"
						},
						{
							"name": "Actualizar categoria inexistente",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Categoria123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Categoria no encontrada.\",\r\n  \"message\": \"La categoria con id {{category_id}} no existe en la base de datos.\",\r\n  \"statusCode\": 404\r\n}"
						}
					]
				},
				{
					"name": "Borrar categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Producto eliminado exitosamente\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						},
						"description": "Este endpoint permite borrar un producto específico de la colección de productos en la base de datos. Cuando la operación se completa con éxito, el servidor debe retornar un código `204 No Content`, lo que indica que la solicitud se ha procesado correctamente y no hay contenido adicional que mostrar."
					},
					"response": [
						{
							"name": "Borrar categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Borrar categoria inexistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Categoria no encontrada.\",\r\n  \"message\": \"La categoria con id {{category_id}} no existe en la base de datos.\",\r\n  \"statusCode\": 404\r\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Receta",
			"item": [
				{
					"name": "Crear receta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"recipe_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('name');\r",
									"  pm.expect(responseData).to.have.property('description');\r",
									"  pm.expect(responseData).to.have.property('photo');\r",
									"  pm.expect(responseData).to.have.property('preparation');\r",
									"  pm.expect(responseData).to.have.property('video');\r",
									"  pm.expect(responseData).to.have.property('id');\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recipes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": [
						{
							"name": "Crear receta",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"paella\",\n    \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n    \"photo\": \"https://example.com/paella.jpg\",\n    \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n    \"video\": \"https://example.com/paella-preparacion.mp4\"\n}"
						},
						{
							"name": "Crear receta Error Cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recipes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given culture is invalid\"\n}"
						}
					]
				},
				{
					"name": "Obtener recetas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Each recipe object in the array has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;\r",
									"\r",
									"    responseData.forEach(recipe => {\r",
									"        pm.expect(recipe).to.have.property('id').that.is.a('string');\r",
									"        pm.expect(recipe).to.have.property('name').that.is.a('string');\r",
									"        pm.expect(recipe).to.have.property('description').that.is.a('string');\r",
									"        pm.expect(recipe).to.have.property('photo').that.is.a('string');\r",
									"        pm.expect(recipe).to.have.property('preparation').that.is.a('string');\r",
									"        pm.expect(recipe).to.have.property('video').that.is.a('string');\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recipes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": [
						{
							"name": "Obtener recetas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "\n[\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"paella\",\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n            \"photo\": \"https://example.com/paella.jpg\",\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n            \"video\": \"https://example.com/paella-preparacion.mp4\",\n            \"culture\": {\n                        \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n                        \"name\": \"Mediterranean Culture\",\n                        \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\"  \n            }\n        },\n        {\n            \"id\": \"48b0ab50-1276-11ed-861d-0242ac120002\",\n            \"name\": \"tacos\",\n            \"description\": \"Un plato típico mexicano compuesto por tortillas de maíz rellenas de carne, vegetales, y salsas variadas.\",\n            \"photo\": \"https://example.com/tacos.jpg\",\n            \"preparation\": \"Cocina la carne a tu gusto, calienta las tortillas en un comal y rellénalas con carne, vegetales y salsa. Sirve caliente.\",\n            \"video\": \"https://example.com/tacos-preparacion.mp4\",\n            \"culture\": {\n                        \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n                        \"name\": \"Mediterranean Culture\",\n                        \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\"   \n            }\n        },\n        {\n            \"id\": \"48b2cd30-1276-11ed-861d-0242ac120002\",\n            \"name\": \"sushi\",\n            \"description\": \"Plato japonés que consiste en arroz avinagrado acompañado de pescado crudo, vegetales o mariscos.\",\n            \"photo\": \"https://example.com/sushi.jpg\",\n            \"preparation\": \"Cocina el arroz para sushi y sazónalo con vinagre. Coloca una hoja de alga nori, agrega el arroz y el relleno de tu elección. Enrolla y corta en piezas.\",\n            \"video\": \"https://example.com/sushi-preparacion.mp4\",\n            \"culture\": {\n                        \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n                        \"name\": \"Mediterranean Culture\",\n                        \"description\": \"The Mediterranean gastronomic culture is characterized by the use of fresh ingredients such as olive oil, fish, fruits, and vegetables, being one of the healthiest in the world.\"  \n            }\n        }\n    ]\n"
						},
						{
							"name": "Obtener recetas vacio",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recipes"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"recipes\": []\n}"
						}
					]
				},
				{
					"name": "Obtener receta",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener receta existente",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipes/{{recipe_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48b2cd30-1276-11ed-861d-0242ac120002\",\n    \"name\": \"sushi\",\n    \"description\": \"Plato japonés que consiste en arroz avinagrado acompañado de pescado crudo, vegetales o mariscos.\",\n    \"photo\": \"https://example.com/sushi.jpg\",\n    \"preparation\": \"Cocina el arroz para sushi y sazónalo con vinagre. Coloca una hoja de alga nori, agrega el arroz y el relleno de tu elección. Enrolla y corta en piezas.\",\n    \"video\": \"https://example.com/sushi-preparacion.mp4\",\n    \"culture\": {\n                \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n                \"name\": \"Asian Culture\",\n                \"description\": \"Asian culture description.\"   \n    }\n}"
						},
						{
							"name": "Obtener receta no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The recipe with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Actualizar receta",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"paella valenciana modificado\",\n   \"description\": \"Una versión clásica de la paella tradicional, con pollo, conejo, mariscos, y vegetales típicos de la región de Valencia.\",\n   \"photo\": \"https://example.com/paella-valenciana.jpg\",\n   \"preparation\": \"En una paellera, calienta aceite de oliva y dora los trozos de pollo y conejo. Añade los mariscos, luego los vegetales, y cocina brevemente. Incorpora el arroz y sofríe con azafrán. Agrega el caldo de pollo y cocina a fuego lento hasta que el arroz esté tierno. Deja reposar unos minutos antes de servir.\",\n\t \"video\": \"new video\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar receta",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipe/{{recipe_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipe",
										"{{recipe_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"paella valenciana\",\n    \"descripcion\": \"Una versión clásica de la paella tradicional, con pollo, conejo, mariscos, y vegetales típicos de la región de Valencia.\",\n    \"photo\": \"https://example.com/paella-valenciana.jpg\",\n    \"preparation\": \"En una paellera, calienta aceite de oliva y dora los trozos de pollo y conejo. Añade los mariscos, luego los vegetales, y cocina brevemente. Incorpora el arroz y sofríe con azafrán. Agrega el caldo de pollo y cocina a fuego lento hasta que el arroz esté tierno. Deja reposar unos minutos antes de servir.\",\n    \"video\": \"https://example.com/paella-valenciana-preparacion.mp4\"\n}"
						},
						{
							"name": "Actualizar receta no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recipe/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recipe",
										"{{recipe_id}}"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The recipe with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Eliminar receta",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipe/{{recipe_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipe",
										"{{recipe_id}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given id was not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Categoria-Producto",
			"item": [
				{
					"name": "Crear producto Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"product_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields - id, name, description, history and categoryProduct\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('name');\r",
									"    pm.expect(responseData).to.have.property('description');\r",
									"\tpm.expect(responseData).to.have.property('history');\r",
									"});\r",
									"\r",
									"pm.test(\"Description is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg4NDg1NSwiZXhwIjoxNzI2ODkyMDU1fQ.LjOMtn_bXD7yWw1AHLn3XB8dKP_3t9ZSNY_Ce56OQKo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\r\n  \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/product",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product"
							]
						},
						"description": "Este endpoint permite agregar un nuevo producto a la colección de productos asociados a una cultura gastronómica. El producto debe incluir un nombre, descripción, historia, y la categoría a la cual pertenece."
					},
					"response": [
						{
							"name": "Crear producto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"Especia o condimento picante usado a menudo en sushi.\",\r\n  \"history\": \"El wasabi ha sido parte esencial de la cocina japonesa durante siglos.\",\r\n  \"categoryProduct\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/product",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Wasabi\"\n}"
						}
					]
				},
				{
					"name": "Crear categoria Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"category_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Condimentos\",\r\n  \"description\": \"Descripción de la categoria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Crear categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"condimentos\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/categories",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"condimentos\"\n}"
						}
					]
				},
				{
					"name": "Agregar producto a categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}/products/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint permite asociar un producto existente a una categoría específica. Esta operación añade una relación entre el producto y la categoría en la base de datos. Una vez realizada la asociación, se espera que el servidor retorne el producto actualizado con la categoría asociada, junto con un código de estado `201 Created`, indicando que la operación se ha completado con éxito."
					},
					"response": [
						{
							"name": "Agregar producto a categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"Especia o condimento picante usado a menudo en sushi.\",\r\n  \"history\": \"El wasabi ha sido parte esencial de la cocina japonesa durante siglos.\",\r\n  \"categoryProduct\": {\r\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\r\n    \"name\": \"Condimentos\"\r\n  },\r\n  \"dateCreation\": \"2024-08-01T10:00:00Z\",\r\n  \"gastronomicCulture\": []\r\n}\r\n"
						},
						{
							"name": "Agregar producto inexistente a categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Producto no encontrado\",\n    \"message\": \"El producto con id {{product_id}} no existe.\",\n    \"statusCode\": 404\n}"
						},
						{
							"name": "Agregar producto a categoria inexistente",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Categoria no encontrada.\",\n    \"message\": \"La categoria con id {{category_id}} no existe.\",\n    \"statusCode\": 404\n}"
						}
					]
				},
				{
					"name": "Obtener producto de una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}/products/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint recupera la información de una categoría específica asociada a un producto. Los parámetros `product_id` y `category_id` son los UUIDs del producto y de la categoría respectivamente."
					},
					"response": [
						{
							"name": "Obtener categoria de producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n    \"name\": \"Condimentos\",\n    \"description\": \"Especias y salsas usadas para realzar el sabor de los platos.\",\n    \"dateCreation\": \"2024-08-01T10:30:00Z\"\n}"
						},
						{
							"name": "Obtener categoria inexistente de un producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Categoria no encontrada.\",\n    \"message\": \"La categoria con id {{category_id}} no existe.\",\n    \"statusCode\": 404\n}"
						},
						{
							"name": "Obtener categoria de producto inexistente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/categories/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Producto no encontrado.\",\n    \"message\": \"El producto con id {{product_id}} no existe.\",\n    \"statusCode\": 404\n}"
						},
						{
							"name": "Obtener producto no asociado a una categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/categories/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Asociación no encontrada.\",\n    \"message\": \"El producto con id {{product_id}} no está asociado a una categoria.\",\n    \"statusCode\": 412\n}"
						}
					]
				},
				{
					"name": "Obtener productos de una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}",
								"products"
							]
						},
						"description": "Este endpoint recupera todos los productos asociados a una categoría específica."
					},
					"response": [
						{
							"name": "Obtener productos de una categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"category_id\": \"abcde12345-6789-1234-5678-9abcdef01234\",\r\n  \"category_name\": \"Condimentos\",\r\n  \"products\": [\r\n    {\r\n      \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n      \"name\": \"Wasabi\",\r\n      \"description\": \"Condimento picante usado en la cocina japonesa.\",\r\n      \"history\": \"El wasabi es un condimento originario de Japón, utilizado comúnmente en sushi.\",\r\n      \"categoryProduct\": \"Condimento\",\r\n      \"dateCreation\": \"2024-08-17\"\r\n    },\r\n    {\r\n      \"id\": \"987e6543-e21b-12d3-a456-426614174001\",\r\n      \"name\": \"Pimienta negra\",\r\n      \"description\": \"Especia usada en diversas cocinas del mundo.\",\r\n      \"history\": \"La pimienta negra es originaria de la India, y es uno de los condimentos más antiguos del mundo.\",\r\n      \"categoryProduct\": \"Condimento\",\r\n      \"dateCreation\": \"2024-08-17\"\r\n    }\r\n  ]\r\n}"
						},
						{
							"name": "Obtener productos de una categoria inexistente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/categories/{{category_id}}/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Categoría no encontrada\",\r\n  \"message\": \"La categoría con id {{category_id' no existe en la base de datos.\",\r\n  \"statusCode\": 404\r\n}"
						}
					]
				},
				{
					"name": "Actualizar lista productos de una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{product_id}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}",
								"products"
							]
						},
						"description": "Este endpoint actualiza la lista de productos asociados a una categoría específica. En este caso, se añade un nuevo producto a la categoría, el cual no estaba asociado a ninguna categoría previamente."
					},
					"response": [
						{
							"name": "Actualizar lista productos de una categoria",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"products\": [\r\n    {\r\n      \"product_id\": \"{{product_id}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"La lista de productos ha sido actualizada con éxito.\",\n    \"category_id\": \"existing-category-uuid\",\n    \"updated_products\": [\n        {\n            \"product_id\": \"new-product-uuid\",\n            \"name\": \"Nombre del producto\",\n            \"description\": \"Descripción del producto\",\n            \"history\": \"Historia del producto\",\n            \"category\": \"Nueva categoría asignada\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualizar productos no existentes de una categoria",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"products\": [\r\n    {\r\n      \"product_id\": \"{{product_id}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Producto no encontrado\",\n    \"details\": \"El producto con ID {{product_id}} no existe y no puede ser asociado a la categoría con ID {{category_id}}.\",\n    \"statusCode\": 404\n}"
						},
						{
							"name": "Actualizar productos de una categoria inexistente",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"products\": [\r\n    {\r\n      \"product_id\": \"{{category_id}}\"\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Categoría no encontrada\",\n    \"details\": \"La categoría con ID {{category_id}}' no existe en el sistema.\",\n    \"statusCode\": 404\n}"
						}
					]
				},
				{
					"name": "Borrar un producto de una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/categories/{{category_id}}/products/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories",
								"{{category_id}}",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Este endpoint elimina la asociación de un producto específico de una categoría. Si la operación es exitosa, el servidor responde con un código 204 No Content, indicando que la operación se realizó sin problemas y no se necesita devolver contenido adicional."
					},
					"response": [
						{
							"name": "Borrar un producto de una categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Borrar un producto inexistente de una categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Producto no encontrado\",\r\n  \"message\": \"El producto con ID {{product_id}} no existe en la categoría con ID {category_id}.\",\r\n  \"statusCode\": 404\r\n}"
						},
						{
							"name": "Borrar un producto de una categoria inexistente",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Categoría no encontrada\",\r\n  \"message\": \"La categoría con ID {{category_id}} no existe.\",\r\n  \"statusCode\": 404\r\n}"
						},
						{
							"name": "Borrar un producto no asociado a categoria",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"error\": \"Producto no asociado a la categoría\",\r\n  \"message\": \"El producto con ID {{product_id}} no está asociado a la categoría con ID {{category_id}}.\",\r\n  \"statusCode\": 412\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "Restaurante-Ciudad",
			"item": [
				{
					"name": "agregar un restaurante a una ciudad",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "agregar un restaurante a una ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Bogota\",\n    \"restaurants\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"KO\",\n            \"michelinStars\": 2,\n            \"achievementDate\": \"1900-01-01\"\n        }\n    ]\n}"
						},
						{
							"name": "agregar un restaurante no existente a una ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"El restaurante con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						},
						{
							"name": "agregar un restaurante a una ciudad no existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/00000000-0000-0000-0000-000000000000/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"00000000-0000-0000-0000-000000000000",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener un restaurante de una ciudad",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un restaurante de una ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\"name\": \"KO\",\n\t\t\"michelinStars\": 2,\n\t\t\"achievementDate\": \"1900-01-01\"\n}"
						},
						{
							"name": "Obtener un restaurante no existente de una ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"El restaurante con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						},
						{
							"name": "Obtener un restaurante de una ciudad no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/00000000-0000-0000-0000-000000000000/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"00000000-0000-0000-0000-000000000000",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						},
						{
							"name": "Obtener un restaurante no asociado de un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no asociado\",\n    \"message\": \"El restaurante con id 123 no esta asociado a la ciudad\"\n}"
						}
					]
				},
				{
					"name": "Obtener restaurantes de una ciudad",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}",
								"restaurants"
							]
						}
					},
					"response": [
						{
							"name": "Obtener restaurantes de una ciudad",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n\t\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\t\"name\": \"KO\",\n\t\t\t\"michelinStars\": 2,\n\t\t\t\"achievementDate\": \"1900-01-01\"\n\t},\n\t{\n\t\t\t\"id\": \"123asd-1276-11ed-861d-0242ac120002\",\n\t\t\t\"name\": \"Vista corona\",\n\t\t\t\"michelinStars\": 2,\n\t\t\t\"achievementDate\": \"2001-01-01\"\n\t}\n]"
						},
						{
							"name": "Obtener restaurantes de una ciudad no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/00000000-0000/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"00000000-0000",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 00000000-0000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Actualizar restaurantes de una ciudad",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{restaurant_id}}\"\n    },\n    {\n        \"id\": \"{{restaurant_id_2}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}",
								"restaurants"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar restaurantes de una ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{restaurant_id}}\"\n    },\n    {\n        \"id\": \"{{restaurant_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Bogota\",\n    \"restaurants\": [\n\t\t\t{\n\t\t\t\t\t\"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n\t\t\t\t\t\"name\": \"KO\",\n\t\t\t\t\t\"michelinStars\": 2,\n\t\t\t\t\t\"achievementDate\": \"1900-01-01\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\t\"id\": \"123asd-1276-11ed-861d-0242ac120002\",\n\t\t\t\t\t\"name\": \"Vista corona\",\n\t\t\t\t\t\"michelinStars\": 2,\n\t\t\t\t\t\"achievementDate\": \"2001-01-01\"\n\t\t\t}\n\t\t]\n}"
						},
						{
							"name": "Actualizar restaurantes no existentes de una ciudad",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{restaurant_id}}\"\n    },\n    {\n        \"id\": \"{{restaurant_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrado\",\n    \"message\": \"el restaurante con id 0000000-00000 no existe\"\n}"
						},
						{
							"name": "Actualizar restaurantes de una ciudad no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{city_id}}\"\n    },\n    {\n        \"id\": \"{{city_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city/000-000/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"000-000",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 000-000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar un restaurante de una ciudad",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/city/{{city_id}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city",
								"{{city_id}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un restaurante de una ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurant/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurant",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Eliminar una ciudad no existente de un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{city_id}}/restaurant/000-000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{city_id}}",
										"restaurant",
										"000-000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no encontrada\",\n    \"message\": \"El restaurante con id 000-000 no existe\"\n}"
						},
						{
							"name": "Eliminar un restaurante no asociado a una ciudad",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/city/{{country_id}}/restaurant/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city",
										"{{country_id}}",
										"restaurant",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Restaurante no asociado\",\n    \"message\": \"El restaurante con id 123 no esta asociado a la ciudad\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Ciudad-Pais",
			"item": [
				{
					"name": "Crear ciudad Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"city_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/city",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"city"
							]
						}
					},
					"response": [
						{
							"name": "Crear ciudad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Bogota\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"city"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"144602ac-1278-11ed-861d-0242ac120002\",\n    \"name\": \"Bogota\"\n}"
						}
					]
				},
				{
					"name": "Crear pais Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - name and id\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('id');",
									"});",
									"",
									"",
									"pm.test(\"Name is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Id is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg3MjY0NiwiZXhwIjoxNzI2ODc5ODQ2fQ.dYIQ1Mv5D1WH3GYT1OZO0T56QEF1HXBUpDku1fUrJGc",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Colombia\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/country",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"country"
							]
						}
					},
					"response": [
						{
							"name": "Crear pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"nombre\": \"Colombia\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Colombia\"\n}"
						}
					]
				},
				{
					"name": "agregar una ciudad a un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"",
									"pm.test(\"Check for required fields in the response\", function () {",
									"    var responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('cities');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/countries/{{country_id}}/cities/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"countries",
								"{{country_id}}",
								"cities",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "agregar una ciudad a un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Colombia\",\n    \"cities\": [\n        {\n            \"id\": \"1234asd-1276-11ed-861d-0242ac120002\",\n            \"name\": \"Bogota\"\n        }\n    ]\n}"
						},
						{
							"name": "agregar una ciudad no existente a un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						},
						{
							"name": "agregar una ciudad a un pais no existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/00000000-0000-0000-0000-000000000000/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"00000000-0000-0000-0000-000000000000",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 00000000-0000-0000-0000-000000000000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener una ciudad de un pais",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/countries/{{country_id}}/cities/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"countries",
								"{{country_id}}",
								"cities",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una ciudad de un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"7e265679-3a85-416d-afca-80fd04e2b79c\",\n    \"name\": \"Bogota\"\n}"
						},
						{
							"name": "Obtener una ciudad no existente de un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/0000000-00000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"0000000-00000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 0000000-00000 no existe\"\n}"
						},
						{
							"name": "Obtener una ciudad de un pais no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/00000-000/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"00000-000",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 00000-000 no existe\"\n}"
						},
						{
							"name": "Obtener una ciudad no asociada de un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no asociada\",\n    \"message\": \"La ciudad con id 123 no esta asociada a el pais\"\n}"
						}
					]
				},
				{
					"name": "Obtener ciudades de un pais",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/countries/{{country_id}}/cities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"countries",
								"{{country_id}}",
								"cities"
							]
						}
					},
					"response": [
						{
							"name": "Obtener ciudades de un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"7e265679-3a85-416d-afca-80fd04e2b79c\",\n    \t\"name\": \"Bogota\"\n    },\n    {\n        \"id\": \"123232-3a85-416d-afca-80fd04e2b79c\",\n    \t\"name\": \"Medellin\"\n    },\n    {\n        \"id\": \"121232-3a85-416d-afca-80fd04e2b79c\",\n    \t\"name\": \"Cali\"\n    }\n]"
						},
						{
							"name": "Obtener ciudades de un pais no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/00000000-0000/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"00000000-0000",
										"city"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 00000000-0000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Actualizar ciudades de un pais",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{city_id}}\"\n    },\n    {\n        \"id\": \"{{city_id_2}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/countries/{{country_id}}/cities",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"countries",
								"{{country_id}}",
								"cities"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar ciudades de un pais",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{city_id}}\"\n    },\n    {\n        \"id\": \"{{city_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Colombia\",\n    \"cities\": [\n        {\n            \"id\": \"1234asd-1276-11ed-861d-0242ac120002\",\n            \"name\": \"Bogota\"\n        },\n\t\t\t\t{\n            \"id\": \"1234asd-1276-11ed-861d-0242ac120002\",\n            \"name\": \"Medellin\"\n        }\n    ]\n}"
						},
						{
							"name": "Actualizar ciudades no existentes a un pais",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{city_id}}\"\n    },\n    {\n        \"id\": \"{{city_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 0000000-00000 no existe\"\n}"
						},
						{
							"name": "Actualizar ciudades de un pais no existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": \"{{city_id}}\"\n    },\n    {\n        \"id\": \"{{city_id_2}}\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/country/000-000/city",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"000-000",
										"city"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Pais no encontrado\",\n    \"message\": \"El pais con id 000-000 no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar una ciudad de un pais",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/countries/{{country_id}}/cities/{{city_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"countries",
								"{{country_id}}",
								"cities",
								"{{city_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar una ciudad de un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Eliminar una ciudad no existente de un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/000-000",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"000-000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no encontrada\",\n    \"message\": \"La ciudad con id 000-000 no existe\"\n}"
						},
						{
							"name": "Eliminar una ciudad no asociada a un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/country/{{country_id}}/city/{{city_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"country",
										"{{country_id}}",
										"city",
										"{{city_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Ciudad no asociada\",\n    \"message\": \"La ciudad con id 123 no esta asociada a el pais\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cultura-Receta",
			"item": [
				{
					"name": "Crear cultura gastronomica Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - id, name, description, restaurants, countries, and products\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('description');",
									"});",
									"",
									"pm.test(\"Description is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cultura Gastronómica JaponesaAAA\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Permite la creación de una nueva cultura gastronómica en la base de datos, incluyendo su nombre, descripción y los países que la conforman."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/cultures",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n    \"restaurants\": [\n        \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n    ],\n    \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n    ],\n    \"products\": [\n        \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n        \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n    ],\n    \"recipes\": [\n        \"abcd1234-efgh-5678-ijkl-1234567890mn\"\n    ]\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Datos inválidos\",\n    \"message\": \"El campo 'nombre' es obligatorio.\"\n}"
						}
					]
				},
				{
					"name": "Crear receta Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"recipe_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('name');\r",
									"  pm.expect(responseData).to.have.property('description');\r",
									"  pm.expect(responseData).to.have.property('photo');\r",
									"  pm.expect(responseData).to.have.property('preparation');\r",
									"  pm.expect(responseData).to.have.property('video');\r",
									"  pm.expect(responseData).to.have.property('id');\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/recipes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"recipes"
							]
						}
					},
					"response": [
						{
							"name": "Crear receta",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"recipes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"paella\",\n    \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n    \"photo\": \"https://example.com/paella.jpg\",\n    \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n    \"video\": \"https://example.com/paella-preparacion.mp4\"\n}"
						},
						{
							"name": "Crear receta Error Cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"name\": \"paella\",\n   \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n   \"photo\": \"https://example.com/paella.jpg\",\n   \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n   \"video\": \"https://example.com/paella-preparacion.mp4\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"recipes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given culture is invalid\"\n}"
						}
					]
				},
				{
					"name": "Agregar receta a Cultura",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar receta a Cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"recipes\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n            \"name\": \"paella\",\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\n            \"photo\": \"https://example.com/paella.jpg\",\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\n            \"video\": \"https://example.com/paella-preparacion.mp4\"\n        }\n    ]\n}"
						},
						{
							"name": "400 fail",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given culture is invalid\"\n}"
						}
					]
				},
				{
					"name": "Obtener recetas de cultura",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"recipes"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n    \"name\": \"Cultura Gastronómica Española\",\r\n    \"description\": \"descripcion cultura española.\",\r\n    \"recipes\": [\r\n        {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"paella\",\r\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\r\n            \"photo\": \"https://example.com/paella.jpg\",\r\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\r\n            \"video\": \"https://example.com/paella-preparacion.mp4\",\r\n            \"culture\": \"48a9ab90-1276-11ed-861d-0242ac120009\"\r\n        },\r\n        {\r\n            \"id\": \"48b0ab50-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"Gambas\",\r\n            \"description\": \"gambas ala ajillo\",\r\n            \"photo\": \"https://example.com/gambas.jpg\",\r\n            \"preparation\": \"gambas hervidas con salsa de ajo\",\r\n            \"video\": \"https://example.com/gambas-preparacion.mp4\",\r\n            \"culture\": \"48a9ab90-1276-11ed-861d-0242ac120010\"\r\n        },\r\n        {\r\n            \"id\": \"48b2cd30-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"salmorejo\",\r\n            \"description\": \"El salmorejo cordobés es una crema fría andaluza de tomate, pan, ajo, y aceite, servida con jamón serrano y huevo duro\",\r\n            \"preparation\": \"Tritura tomates, pan, ajo, aceite, y vinagre hasta obtener una crema suave, enfría y sirve con jamón y huevo duro.\",\r\n            \"video\": \"https://example.com/salmorejo-preparacion.mp4\",\r\n            \"culture\": \"48a9ab90-1276-11ed-861d-0242ac120011\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "400 fail",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given culture is invalid\"\n}"
						},
						{
							"name": "200 OK lista vacia",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"recipes\": []\n}"
						}
					]
				},
				{
					"name": "Obtener receta de cultura",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n    \"name\": \"Cultura Gastronómica Española\",\r\n    \"description\": \"descripcion cultura española.\",\r\n    \"recipes\": [\r\n        {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"paella\",\r\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\r\n            \"photo\": \"https://example.com/paella.jpg\",\r\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\r\n            \"video\": \"https://example.com/paella-preparacion.mp4\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "400 fail",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The recipe with the given culture is invalid\"\n}"
						}
					]
				},
				{
					"name": "Actualizar recetas cultura",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{recipe_id}}\"\r\n    },\r\n    {\r\n        \"id\": \"{{recipe_id2}}\"\r\n    }\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"recipes",
								""
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"recipe_id\": \"{{recipe_id}}\"\r\n    },\r\n    {\r\n        \"recipe_id\": \"{{recipe_id_2}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n    \"name\": \"Cultura Gastronómica Española\",\r\n    \"description\": \"descripcion cultura española.\",\r\n    \"recipes\": [\r\n        {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"paella\",\r\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\r\n            \"photo\": \"https://example.com/paella.jpg\",\r\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\r\n            \"video\": \"https://example.com/paella-preparacion.mp4\"\r\n        },\r\n        {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"paella2\",\r\n            \"description\": \"Un plato tradicional español hecho a base de arroz, mariscos, pollo, conejo y azafrán, originario de Valencia.\",\r\n            \"photo\": \"https://example.com/paella.jpg\",\r\n            \"preparation\": \"Calienta aceite en una paellera, añade mariscos y carnes para dorar. Luego, agrega arroz, azafrán y caldo. Cocina a fuego lento hasta que el arroz absorba el caldo y se cocine por completo. Deja reposar antes de servir.\",\r\n            \"video\": \"https://example.com/paella-preparacion.mp4\"\r\n        }\r\n    ]\r\n}"
						},
						{
							"name": "400 recipe not valid",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"recipe_id\": \"{{recipe_id}}\"\r\n    },\r\n    {\r\n        \"recipe_id\": \"{{recipe_id_2}}\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Una receta no es valida\",\n    \"message\": \"La receta  con id 0000000-00000 no es válida\"\n}"
						}
					]
				},
				{
					"name": "Eliminar receta de cultura",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"recipes",
								"{{recipe_id}}"
							]
						}
					},
					"response": [
						{
							"name": "204",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Receta eliminada de la cultura \"\n}"
						},
						{
							"name": "400 bad request",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Una receta no es valida\",\n    \"message\": \"La receta  con id 0000000-00000 no es válida\"\n}"
						},
						{
							"name": "404 not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/recipes/{{recipe_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"recipes",
										"{{recipe_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Una receta no encontrada\",\n    \"message\": \"La receta  con id 0000000-00000 no existe\"\n}"
						}
					]
				}
			],
			"description": "Esta carpeta agrupa los endpoints destinados a la gestión de recetas gastronómicas asociadas a diferentes culturas. Las recetas son una parte fundamental de las culturas culinarias, ya que representan los platillos tradicionales y las prácticas culinarias transmitidas de generación en generación."
		},
		{
			"name": "Cultura-Producto",
			"item": [
				{
					"name": "Crear cultura gastronomica Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - id, name, description, restaurants, countries, and products\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('description');",
									"});",
									"",
									"pm.test(\"Description is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cultura Gastronómica JaponesaAAA\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Permite la creación de una nueva cultura gastronómica en la base de datos, incluyendo su nombre, descripción y los países que la conforman."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/cultures",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n    \"restaurants\": [\n        \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n    ],\n    \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n    ],\n    \"products\": [\n        \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n        \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n    ],\n    \"recipes\": [\n        \"abcd1234-efgh-5678-ijkl-1234567890mn\"\n    ]\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Datos inválidos\",\n    \"message\": \"El campo 'nombre' es obligatorio.\"\n}"
						}
					]
				},
				{
					"name": "Crear producto Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"product_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields - id, name, description, history and categoryProduct\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('name');\r",
									"    pm.expect(responseData).to.have.property('description');\r",
									"\tpm.expect(responseData).to.have.property('history');\r",
									"});\r",
									"\r",
									"pm.test(\"Description is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjg4NDg1NSwiZXhwIjoxNzI2ODkyMDU1fQ.LjOMtn_bXD7yWw1AHLn3XB8dKP_3t9ZSNY_Ce56OQKo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\r\n  \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/product",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"product"
							]
						},
						"description": "Este endpoint permite agregar un nuevo producto a la colección de productos asociados a una cultura gastronómica. El producto debe incluir un nombre, descripción, historia, y la categoría a la cual pertenece."
					},
					"response": [
						{
							"name": "Crear producto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Wasabi\",\r\n  \"description\": \"Especia o condimento picante usado a menudo en sushi.\",\r\n  \"history\": \"El wasabi ha sido parte esencial de la cocina japonesa durante siglos.\",\r\n  \"categoryProduct\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/product",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"product"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Wasabi\"\n}"
						}
					]
				},
				{
					"name": "Agregar producto a Cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.expect(pm.response.code).to.equal(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoxLCJyb2xlcyI6WyJhZG1pbiIsInVzZXIiLCJyZWFkZXIiLCJ3cml0ZXIiLCJkZWxldGVyIl0sImlhdCI6MTcyNjM0NjYzNiwiZXhwIjoxNzI2MzUzODM2fQ.ayETDh04MP6tiJzJOuIKZb2uRbzVmjOhBvTju3lG09g",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"product",
								"{{product_id}}"
							]
						},
						"description": "Esta carpeta contiene los endpoints destinados a la gestión de productos gastronómicos específicos asociados a distintas culturas. Estos productos pueden incluir ingredientes, utensilios, o alimentos tradicionales que son fundamentales en la preparación de las recetas y en la preservación de la identidad culinaria de una cultura particular."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"products\": [\n        {\n            \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n            \"name\": \"Wasabi\",\n            \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\n            \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\n            \"categoryProduct\": {\n                \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n                \"name\": \"Condimentos\"\n            },\n            \"dateCreation\": \"2024-08-17T14:35:45Z\",\n            \"gastronomicCulture\": []\n        }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"culture\":\"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n\t\t\"recipe\":\"48a9ab90-1276-11ed-861d-0242ac120004\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/products/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener producto de una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"product",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Wasabi\",\n    \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\n    \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\n    \"categoryProduct\": {\n        \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n        \"name\": \"Condimentos\"\n    },\n    \"dateCreation\": \"2024-08-17T14:35:45Z\",\n    \"gastronomicCulture\": []\n}"
						},
						{
							"name": "412 Precondition Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 412,\n   \"message\": \"El producto con el Id dado no esta asociada a la cultura gastronomica\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"culture\":\"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n\t\t\"recipe\":\"48a9ab90-1276-11ed-861d-0242ac120004\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/products/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener productos de una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"products"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[    \n    {\n        \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n        \"name\": \"Wasabi\",\n        \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\n        \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\n        \"categoryProduct\": {\n            \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n            \"name\": \"Condimentos\"\n        },\n        \"dateCreation\": \"2024-08-17T14:35:45Z\",\n        \"gastronomicCulture\": []\n    }\n]"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"culture\":\"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n\t\t\"recipe\":\"48a9ab90-1276-11ed-861d-0242ac120004\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						}
					]
				},
				{
					"name": "Actualizar lista de productos de una cultura",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{product_id}}\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"products"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"{{product_id}}\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"products\": [\n        {\n            \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n            \"name\": \"Wasabi\",\n            \"description\": \"El wasabi es una especia picante usada comúnmente en sushi y otros platos con pescado.\",\n            \"history\": \"El wasabi ha sido un componente esencial de la cocina japonesa durante siglos, conocido por su sabor fuerte y picante.\",\n            \"categoryProduct\": {\n                \"id\": \"5678e9b3-bf93-4f7f-8fd5-c3c11bc7c15a\",\n                \"name\": \"Condimentos\"\n            },\n            \"dateCreation\": \"2024-08-17T14:35:45Z\",\n            \"gastronomicCulture\": []\n        }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"123\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"El producto no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"{{product_id}}\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/products",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"products"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"El cultura gastronomica no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar producto de Cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/product/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"product",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"culture\":\"48a9ab90-1276-11ed-861d-0242ac120004\",\r\n\t\t\"recipe\":\"48a9ab90-1276-11ed-861d-0242ac120004\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/product/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"product",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto no existe\"\n}"
						},
						{
							"name": "412 Precondition Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/product/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"product",
										"{{product_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 412,\n   \"message\": \"El producto con el Id dado no esta asociada a la cultura gastronomica\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cultura-Restaurante",
			"item": [
				{
					"name": "Crear cultura gastronomica Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 300ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(300);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - id, name, description, restaurants, countries, and products\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('name');",
									"    pm.expect(responseData).to.have.property('description');",
									"});",
									"",
									"pm.test(\"Description is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.description).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Description should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cultura Gastronómica JaponesaAAA\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cultures",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Permite la creación de una nueva cultura gastronómica en la base de datos, incluyendo su nombre, descripción y los países que la conforman."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/cultures",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"b7e8f430-23f7-11ee-be56-0242ac120002\",\n    \"name\": \"Cultura Gastronómica Japonesa\",\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n    \"restaurants\": [\n        \"a1c2d3f4-5678-90ab-cdef-1234567890ab\"\n    ],\n    \"countries\": [\n        \"de9c8a70-4567-1234-bcde-9876543210ef\",\n        \"123f4e5d-6789-abcd-ef01-234567890ghi\"\n    ],\n    \"products\": [\n        \"1234abcd-5678-efgh-ijkl-1234567890mn\",\n        \"5678ijkl-1234-mnop-qrst-1234567890uv\"\n    ],\n    \"recipes\": [\n        \"abcd1234-efgh-5678-ijkl-1234567890mn\"\n    ]\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"La cocina japonesa es reconocida por su énfasis en ingredientes frescos, la estacionalidad de los alimentos y su preparación cuidadosa.\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Datos inválidos\",\n    \"message\": \"El campo 'nombre' es obligatorio.\"\n}"
						}
					]
				},
				{
					"name": "Crear restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"restaurant_id\", data.id);\r",
									"\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.name).to.exist;\r",
									"  pm.expect(responseData.michelinStars).to.exist;\r",
									"  pm.expect(responseData.achievementDate).to.exist;\r",
									"  pm.expect(responseData.id).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Name is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"KO2\",\n\t\"michelinStars\": 2,\n    \"achievementDate\": \"2023-09-28T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite registrar un nuevo restaurante en la base de datos, especificando detalles como nombre, dirección, tipo de cocina, y cultura gastronómica asociada."
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"KO\",\n\t\"michelinStars\": 2,\n\t\"achievementDate\": \"1900-01-01\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"KO\",\n    \"michelinStars\": 2,\n    \"achievementDate\": \"1900-01-01\"\n}"
						}
					]
				},
				{
					"name": "Agregar restaurante a Cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Esta carpeta agrupa los endpoints relacionados con la gestión de restaurantes que representan o están inspirados en diversas culturas gastronómicas. Los restaurantes son una extensión de las tradiciones culinarias y ofrecen a los usuarios la posibilidad de explorar y experimentar la gastronomía de diferentes culturas a través de su ambiente, menú y servicio."
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/v1/cultures/1f2b3c4d-5678-90ab-cdef-1234567890ab/restaurants/1f2b3c4d-5678-90ab-cdef-1234567890ab",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"cultures",
										"1f2b3c4d-5678-90ab-cdef-1234567890ab",
										"restaurants",
										"1f2b3c4d-5678-90ab-cdef-1234567890ab"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"restaurants\": [\n      {\n        \"id\": \"12323ad-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Restaurante\",\n        \"michelinStars\": 4,\n        \"achievementDate\": \"2011-01-01\",\n        \"city\": {\n            \"name\": \"Cusco\"\n        },\n        \"country\": {\n            \"name\": \"Peru\"\n        }\n     }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/123/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener restaurante de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{product_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"restaurants",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n        \"id\": \"12323ad-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Restaurante\",\n        \"michelinStars\": 4,\n        \"achievementDate\": \"2011-01-01\",\n        \"city\": {\n            \"name\": \"Cusco\"\n        },\n        \"country\": {\n            \"name\": \"Peru\"\n        }\n     }"
						},
						{
							"name": "412 Precondition Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"{{product_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 412,\n   \"message\": \"El restaurante con el Id dado no esta asociada a la cultura gastronomica\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/123/restaurants/{{product_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"restaurants",
										"{{product_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante no existe\"\n}"
						}
					]
				},
				{
					"name": "Obtener restaurantes de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"restaurants"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[    \n    {\n        \"id\": \"12323ad-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Restaurante\",\n        \"michelinStars\": 4,\n        \"achievementDate\": \"2011-01-01\",\n        \"city\": {\n            \"name\": \"Cusco\"\n        },\n        \"country\": {\n            \"name\": \"Peru\"\n        }\n     }\n]"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/123/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						}
					]
				},
				{
					"name": "Actualizar lista de restaurantes de una cultura",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"restaurants"
							]
						}
					},
					"response": [
						{
							"name": "200 Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"1f2b3c4d-5678-90ab-cdef-1234567890ab\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120004\",\n    \"name\": \"Cultura Gastronómica Española\",\n    \"description\": \"descripcion cultura española.\",\n    \"restaurants\": [\n        {\n        \"id\": \"12323ad-1278-11ed-861d-0242ac120002\",\n        \"name\": \"Restaurante\",\n        \"michelinStars\": 4,\n        \"achievementDate\": \"2011-01-01\",\n        \"city\": {\n            \"name\": \"Cusco\"\n        },\n        \"country\": {\n            \"name\": \"Peru\"\n        }\n     }\n    ]\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"123\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"El restaurante no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n   {\n       \"id\": \"{{restaurant_id}}\"\n   }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/cultures/123/restaurants",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"restaurants"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 404,\n   \"message\": \"El cultura gastronomica no existe\"\n}"
						}
					]
				},
				{
					"name": "Eliminar restaurante de Cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "204 No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/123/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"123",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura gastronomica no existe\"\n}"
						},
						{
							"name": "404 Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/123",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"123"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante no existe\"\n}"
						},
						{
							"name": "412 Precondition Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/cultures/{{culture_id}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n   \"statusCode\": 412,\n   \"message\": \"El restaurante con el Id dado no esta asociada a la cultura gastronomica\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}